# -*- coding: utf-8 -*-
"""2nd Data science project.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1jRIqK0rLSUsy-U1Y6V1udfMFNUDmNHPj
"""

import pandas as pd
import matplotlib.pyplot as plt
import numpy as np
import seaborn as sns
from sklearn import linear_model
from sklearn.model_selection import train_test_split
from sklearn.metrics import r2_score


data = pd.read_csv('/content/adult.data',sep=",",skipinitialspace=True)
data.columns = ['Age','Workclass','fnlwgt','Education','Education-num','Marital-status','Occupation','Relationship','Race','Sex','Capital-gain','Capital-loss','Hours_per_week','Native_country','Income']
data.dropna()

#Converting categorical data to numerical data
data["Education"].unique()
data["Education"] = data["Education"].map({'Bachelors': 0,'HS-grad': 1,'11th': 2,'Masters': 3,'9th': 4,'Some-college': 5,'Assoc-acdm': 6,'Assoc-voc': 7,'7th-8th': 8,'Doctorate': 9,'Prof-school': 10,'5th-6th': 11,'10th': 12,'1st-4th': 13,'Preschool': 14,'12th': 15})

data["Occupation"].unique()
data["Occupation"] = data["Occupation"].map({'Exec-managerial':0,'Handlers-cleaners':1,'Prof-specialty':2,'Other-service':3,'Adm-clerical':4,'Sales':5,'Craft-repair':6,'Transport-moving':7,'Farming-fishing':8,'Machine-op-inspct':9,'Tech-support':10,'Protective-serv':11,'Armed-Forces':12,'Priv-house-serv':13,'?':14})

data["Income"].unique()
data["Income"] = data["Income"].map({'<=50K':49,'>50K':51})

data["Marital-status"].unique()
data["Marital-status"] = data["Marital-status"].map({'Married-civ-spouse': 0,'Divorced': 1,'Married-spouse-absent': 2,'Never-married': 3,'Separated': 4,'Married-AF-spouse': 5,'Widowed': 6})

working_data = data.drop(['Capital-gain','Capital-loss'],axis=1)

working_data.head()

working_data.describe()

working_data.dtypes

working_data.corr()

cmap = sns.diverging_palette(220,10,as_cmap=True)
fig, ax = plt.subplots(figsize=(8,8))
corr =  data.corr().round(2)

# Create a mask
mask = np.triu(np.ones_like(corr, dtype=bool))
np.fill_diagonal(mask, False)

dataplot = sns.heatmap(corr,mask=mask, cmap='jet', annot=True,vmin=-1, vmax=1,linewidth=.5,square= True,cbar_kws={"extend": 'both'},ax=ax)
plt.show()

"""**Observation -
As we Can see from the correlation matrix our numerical data does not have much correlation with each other.**

"""

#Plotting numeric columns

numeric_cols = working_data.select_dtypes(include=['int16', 'int32', 'int64', 'float16', 'float32', 'float64']).columns
categorical_cols = working_data.select_dtypes(include=["bool_","object_"]).columns

for col in numeric_cols:
    data[col].hist()
    plt.title(col)
    plt.show()

"""**OBSERVATION -
1 - The most number of participants in this survey lie between the range of 18 - 45 years of age. The age graph looks like an exponential distribution.
2 - Hours per week shows a leptokurtic distribution, which means there are quite a lot of outliers but data is mainly around 30-40 hours per week.**
"""

for col in numeric_cols:
    working_data.boxplot(column= col,showfliers=False)
    plt.title(col)
    plt.show()

"""**The Education boxplot is interesting because, the data lies between 1(High school) and 5(College), while the median is at 11th grade.Looking at the histogram above we can confirm that most of our participants have some sort of bachlor's degree.**"""

#Plotting categorical data
df_categorical = working_data[[ 'Workclass', 'Marital-status', 'Occupation','Relationship','Race','Sex']]
for i in df_categorical:
  num = df_categorical[i].value_counts()
  fig, ax = plt.subplots(figsize=(21, 21))
  sns.barplot(x=num.index,y=num)
  plt.title(i)
  plt.show()

"""**Observation - 1 - Most of participants have a private job. We need to keep that in mind moving forward.
2 - The top 5 professions with most participants are Professor, craft-repair, exec management, adm clerical and sales.
3 - There's also one data point where we don't have the name of that occupation under the '?' bar, which has been changed to a number for analysis and continuity purposes.
4 - The data highly consists of white people from race point of view.5 - The Male participants are almost double compared to female participants.**
"""

#Deciding on independent and dependent variables.
X = working_data[['Age','Education','Race','Occupation','Sex','Marital-status','Hours_per_week','Native_country']]
y = working_data['Income']
# create dummy variables
make_dummy = pd.get_dummies(X[['Race','Sex','Native_country']], drop_first = True)
X = X.drop(['Race','Sex','Native_country'], axis = 1)
X = pd.concat([X, make_dummy], axis = 1)

# split data into train and test
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.3, random_state = 0)

model = linear_model.LinearRegression()
# fit
model.fit(X_train, y_train)
# predict
y_pred = model.predict(X_test)

# model evaluation
score = r2_score(y_test, y_pred)
print(score)

